#!/usr/bin/make -f

# we need absolute paths because of CMake ..
MAINDIR      = $(CURDIR)
BUILDDIR     = $(MAINDIR)/build_dir
# a demo static library.  Comment this if not needed
DARKDIR      = $(MAINDIR)/ext/sowson_darknet
DARKBUILDDIR = $(DARKDIR)/build_dir
# location of CMakeLists.txt:
DARKCMAKEDIR = $(DARKDIR)

build:
	## build darknet
	# cd $(EXTDIR); ./configure_darknet.bash
	# cd $(DARKDIR); make -f Makefile2
	mkdir -p $(DARKBUILDDIR);
	cd $(DARKBUILDDIR); cmake -DCMAKE_BUILD_TYPE="Release" $(DARKCMAKEDIR)
	make -C $(DARKBUILDDIR)

	## build darknet_py
	## needs header & static library dirs from the darknet build
	mkdir -p $(BUILDDIR);
	cd $(BUILDDIR); cmake -Ddarknet_root=$(DARKDIR) -Ddarknet_lib=$(DARKBUILDDIR) -DCMAKE_BUILD_TYPE="Release" -DCMAKE_INSTALL_PREFIX=$(MAINDIR)/debian/tmp/usr $(MAINDIR)
	make -C $(BUILDDIR)

#cmake:
#	cd $(BUILDDIR); cmake -Ddarknet_root=$(DARKDIR) -DCMAKE_BUILD_TYPE="Release" -DCMAKE_INSTALL_PREFIX=$(MAINDIR)/debian/tmp/usr $(MAINDIR)
	
# thirdly called by launchpad
binary: binary-indep binary-arch

binary-indep:
	# nothing to be done

# cmake runs the install script it generated at build stage
binary-arch:
	cd $(BUILDDIR); cmake -P cmake_install.cmake
	mkdir debian/tmp/DEBIAN
	dpkg-gencontrol -pdarknet_opencl
	dpkg --build debian/tmp ..

# firstly called by launchpad
clean:
	rm -rf $(BUILDDIR) $(DARKBUILDDIR)
	# cd $(DARKBUILDDIR); make clean
	
#package:
#	make -C $(BUILDDIR) package

.PHONY: binary binary-arch binary-indep clean build
